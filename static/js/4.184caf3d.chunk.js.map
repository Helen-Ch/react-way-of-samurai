{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","React","createElement","className","s","dialog","active","NavLink","to","name","Message","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","key","messagesElements","messages","m","dialogs__items","dialogs__messages","values","onSendMessage","newMessageBody","compose","connect","dispatch","sendMessageCreator","withAuthRedirect"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,eAAiB,gCAAgC,OAAS,wBAAwB,OAAS,wBAAwB,kBAAoB,mCAAmC,QAAU,2B,+FCU1NC,EAPI,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OAAOC,IAAAC,cAAA,OAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,QACtCL,IAAAC,cAACK,IAAO,CAACC,GAAIT,GAAOD,EAAMW,QCCnBC,EAJC,SAACZ,GACb,OAAOG,IAAAC,cAAA,OAAKC,UAAWC,IAAEO,SAAUb,EAAMa,U,iCCGvCC,EAAcC,YAAiB,IAgB/BC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAdL,SAACjB,GACpB,OACIG,IAAAC,cAAA,QAAMe,SAAUnB,EAAMoB,cAClBjB,IAAAC,cAAA,WAAKD,IAAAC,cAACiB,IAAK,CACPC,UAAWC,IACXC,SAAU,CAACC,IAAUX,GACrBH,KAAK,iBACLe,YAAY,wBAEhBvB,IAAAC,cAAA,WAAKD,IAAAC,cAAA,cAAQ,aAyCVuB,EAlCC,SAAC3B,GACb,IAAI4B,EAAQ5B,EAAM6B,YACdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI9B,IAAAC,cAACL,EAAU,CAACmC,IAAKD,EAAE/B,GAAIS,KAAMsB,EAAEtB,KAAMT,GAAI+B,EAAE/B,QACpFiC,EAAmBP,EAAMQ,SAASJ,KAAI,SAAAK,GAAC,OAAIlC,IAAAC,cAACQ,EAAO,CAACsB,IAAKG,EAAEnC,GAAIW,QAASwB,EAAExB,aAc9E,OACIV,IAAAC,cAAA,OAAKC,UAAWC,IAAEyB,SACd5B,IAAAC,cAAA,OAAKC,UAAWC,IAAEgC,gBAAiBR,GACnC3B,IAAAC,cAAA,OAAKC,UAAWC,IAAEiC,mBACdpC,IAAAC,cAAA,WAAM+B,GACNhC,IAAAC,cAAA,WACID,IAAAC,cAACY,EAAmB,CAACG,SAVf,SAACqB,GACnBxC,EAAMyC,cAAcD,EAAOE,uB,yBCjBpBC,sBACXC,aAlBoB,SAAChB,GACrB,MAAO,CACHC,YAAaD,EAAMC,gBAIA,SAACgB,GACxB,MAAO,CAIHJ,cAAe,SAACC,GACZG,EAASC,YAAmBJ,SAOpCK,IAFWJ,CAGbhB","file":"static/js/4.184caf3d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialogs__items\":\"Dialogs_dialogs__items__1o0VM\",\"dialog\":\"Dialogs_dialog__lk_cw\",\"active\":\"Dialogs_active__2sQhs\",\"dialogs__messages\":\"Dialogs_dialogs__messages__39nLV\",\"message\":\"Dialogs_message__1xIDh\"};","import React from \"react\";\nimport s from './../Dialogs.module.css';\nimport {NavLink} from \"react-router-dom\";\n\nconst DialogItem = (props) => {\n    let path = '/dialogs/' + props.id;\n    return <div className={s.dialog + ' ' + s.active}>\n        <NavLink to={path}>{props.name}</NavLink>\n    </div>;\n}\n\nexport default DialogItem;","import React from \"react\";\nimport s from './../Dialogs.module.css';\n\n\nconst Message = (props) => {\n    return <div className={s.message}>{props.message}</div>\n}\n\nexport default Message;","import React from \"react\";\nimport s from './Dialogs.module.css';\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\n\nconst maxLength50 = maxLengthCreator(50); // for escape endless loop\n\nconst AddMessageForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div><Field\n                component={Textarea}\n                validate={[required, maxLength50]}\n                name=\"newMessageBody\"\n                placeholder=\"Enter your message\"\n            /></div>\n            <div><button>Send</button></div>\n        </form>\n    );\n}\n\nconst AddMessageFormRedux = reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm);\n\nconst Dialogs = (props) => {\n    let state = props.dialogsPage;\n    let dialogsElements = state.dialogs.map(d => <DialogItem key={d.id} name={d.name} id={d.id}/>);\n    let messagesElements = state.messages.map(m => <Message key={m.id} message={m.message}/>);\n    // let newMessageBody = state.newMessageBody;\n    // const onSendMessageClick = () => {\n    //     props.onSendMessage();\n    // };\n    // const updateNewMessageBody = (e) => {\n    //     let body = e.target.value;\n    //     props.updateNewMessageBody(body);\n    // };\n\n    const addNewMessage = (values) => {\n        props.onSendMessage(values.newMessageBody);\n    };\n\n    return (\n        <div className={s.dialogs}>\n            <div className={s.dialogs__items}>{dialogsElements}</div>\n            <div className={s.dialogs__messages}>\n                <div>{messagesElements}</div>\n                <div>\n                    <AddMessageFormRedux onSubmit={addNewMessage}/>\n                    {/*<div><textarea value={newMessageBody}*/}\n                    {/*                onChange={updateNewMessageBody}*/}\n                    {/*               placeholder='Enter your message'></textarea></div>*/}\n                    {/*<div><button onClick={onSendMessageClick}>Send</button></div>*/}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Dialogs;","import {sendMessageCreator, updateNewMessageBodyCreator} from \"../../redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport {connect} from \"react-redux\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\nconst mapStateToProps = (state) => {\n    return {\n        dialogsPage: state.dialogsPage,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        // updateNewMessageBody: (body) => {\n        //     dispatch(updateNewMessageBodyCreator(body))\n        // },\n        onSendMessage: (newMessageBody) => {\n            dispatch(sendMessageCreator(newMessageBody))\n        },\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect\n)(Dialogs);"],"sourceRoot":""}